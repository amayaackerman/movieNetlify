{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport router from '../router';\nimport { APIService } from '../http/APIService';\nconst apiService = new APIService();\nexport default {\n  name: 'Register',\n  data: () => ({\n    credentials: {},\n    password: \"\",\n    repassword: \"\",\n    valid: true,\n    showMsg: '',\n    loading: false,\n    rules: {\n      username: [v => !!v || \"Username is required\", v => v && v.length > 3 || \"A username must be more than 3 characters long\", v => /^[a-z0-9_]+$/.test(v) || \"A username can only contain letters and digits\"],\n      password: [v => !!v || \"Password is required\", v => v && v.length > 7 || \"The password must be longer than 7 characters\"],\n      email: [v => !!v || \"Email is required\"],\n      repassword: [v => v == this.password || 'Passwords must match']\n    },\n    showPassword: false\n  }),\n  methods: {\n    register() {\n      apiService.registerUser(this.credentials).then(response => {\n        if (response.status === 201) {\n          this.movie = response.data;\n          this.showMsg = \"\";\n          router.push('/auth/');\n        } else {\n          this.showMsg = \"error\";\n        }\n      }).catch(error => {\n        if (error.response.status === 401) {\n          router.push(\"/auth\");\n        } else if (error.response.status === 400) {\n          this.showMsg = \"error\";\n        }\n      });\n    }\n\n  },\n  computed: {\n    passwordConfirmationRule() {\n      return this.password === this.repassword || 'Password must match';\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAoFE,OAAOA,MAAP,MAAmB,WAAnB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,MAAMC,UAAS,GAAI,IAAID,UAAJ,EAAnB;AAEA,eAAe;EACbE,IAAI,EAAE,UADO;EAGbC,IAAI,EAAE,OAAO;IACXC,WAAW,EAAE,EADF;IAEXC,QAAQ,EAAE,EAFC;IAGXC,UAAU,EAAE,EAHD;IAIXC,KAAK,EAAE,IAJI;IAKXC,OAAO,EAAE,EALE;IAMXC,OAAO,EAAE,KANE;IAOXC,KAAK,EAAE;MACLC,QAAQ,EAAE,CACRC,KAAK,CAAC,CAACA,CAAF,IAAO,sBADJ,EAERA,KAAMA,KAAKA,CAAC,CAACC,MAAF,GAAW,CAAjB,IAAuB,gDAFpB,EAGRD,KAAK,eAAeE,IAAf,CAAoBF,CAApB,KAA0B,gDAHvB,CADL;MAMLP,QAAQ,EAAE,CACRO,KAAK,CAAC,CAACA,CAAF,IAAO,sBADJ,EAERA,KAAMA,KAAKA,CAAC,CAACC,MAAF,GAAW,CAAjB,IAAuB,+CAFpB,CANL;MAULE,KAAK,EAAE,CACLH,KAAK,CAAC,CAACA,CAAF,IAAO,mBADP,CAVF;MAaLN,UAAU,EAAE,CACVM,KAAMA,KAAK,KAAKP,QAAX,IAAwB,sBADnB;IAbP,CAPI;IAwBXW,YAAY,EAAE;EAxBH,CAAP,CAHO;EA6BbC,OAAO,EAAE;IACPC,QAAQ,GAAG;MAEVjB,UAAU,CAACkB,YAAX,CAAwB,KAAKf,WAA7B,EAA0CgB,IAA1C,CAA+CC,QAAO,IAAK;QACxD,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;UAC3B,KAAKC,KAAL,GAAaF,QAAQ,CAAClB,IAAtB;UACA,KAAKK,OAAL,GAAe,EAAf;UACAT,MAAM,CAACyB,IAAP,CAAY,QAAZ;QACD,CAJD,MAIK;UACH,KAAKhB,OAAL,GAAe,OAAf;QACF;MACD,CARF,EAQIiB,KARJ,CAQUC,KAAI,IAAK;QAChB,IAAIA,KAAK,CAACL,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;UACjCvB,MAAM,CAACyB,IAAP,CAAY,OAAZ;QACD,CAFD,MAEM,IAAIE,KAAK,CAACL,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;UACvC,KAAKd,OAAL,GAAe,OAAf;QACF;MACD,CAdF;IAeA;;EAlBM,CA7BI;EAiDbmB,QAAQ,EAAE;IACRC,wBAAwB,GAAG;MACzB,OAAQ,KAAKvB,QAAL,KAAkB,KAAKC,UAAxB,IAAuC,qBAA9C;IACJ;;EAHU;AAjDG,CAAf","names":["router","APIService","apiService","name","data","credentials","password","repassword","valid","showMsg","loading","rules","username","v","length","test","email","showPassword","methods","register","registerUser","then","response","status","movie","push","catch","error","computed","passwordConfirmationRule"],"sourceRoot":"","sources":["/Users/amayaackerman/Desktop/ISQA4900/movie-fe/src/components/Register.vue"],"sourcesContent":["<template>\n    <div class=\"container-fluid\">\n        <div class=\"row align-items-center justify-content-center\">\n            <div class=\"col col-12 col-sm-6 col-md-10 col-lg-6\">\n                <div class=\"card\">\n                    <div class=\"card-header\">Register</div>\n                    <div v-if=\"showMsg === 'error'\" class=\"alert alert-danger\" role=\"alert\">\n                    Invalid username or password. Please Try again.\n                    </div>\n                    <div class=\"p-2\"> </div>\n\n                    <div class=\"card-body\">\n                        <div class=\"row align-items-center justify-content-center\" v-if=\"loading\">\n                            <!-- Creating the progress bar -->\n                            <div class=\"progress\">\n                            <div\n                                class=\"\n                                progress-bar progress-bar-striped progress-bar-animated\n                                \"\n                                role=\"progressbar\"\n                                aria-valuenow=\"75\"\n                                aria-valuemin=\"0\"\n                                aria-valuemax=\"100\"\n                                style=\"width: 75%\"\n                            ></div>\n                            </div>\n                        </div>\n                   <!-- Input Field Section -->\n                        <form v-else ref=\"form\">\n                            <div class=\"container-fuild\">\n\n                                    <div class=\"form-group row justify-content-left py-2\">\n                                        <label class=\"col-4\">Username</label>\n                                        <div class=\"col col-8\">\n                                            <input name=\"username\" v-model=\"credentials.username\" type=\"text\" class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row justify-content-end py-2\">\n                                        <label class=\"col-4\">Password</label>\n                                        <div class=\"col col-8\">\n                                            <input v-model=\"credentials.password\" type=\"password\" class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group row justify-content-left py-2\">\n                                        <label class=\"col-4\">Re-enter password</label>\n                                        <div class=\"col col-8\">\n                                            <input v-model=\"credentials.password2\" type=\"password\" class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n                                   <div class=\"form-group row justify-content-left py-2\">\n                                        <label class=\"col-4\">Email</label>\n                                        <div class=\"col col-8\">\n                                            <input v-model=\"credentials.email\" type=\"email\" class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n                                   <div class=\"form-group row justify-content-left py-2\">\n                                        <label class=\"col-4\">First Name</label>\n                                        <div class=\"col col-8\">\n                                            <input v-model=\"credentials.first_name\" type=\"text\" class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n                                    <div class=\"form-group row justify-content-left py-2\">\n                                        <label class=\"col-4\">Last Name</label>\n                                        <div class=\"col col-8\">\n                                            <input v-model=\"credentials.last_name\" type=\"text\" class=\"form-control-sm form-control\">\n                                        </div>\n                                    </div>\n                                    <div class=\"row justify-content-around\">\n                                        <div type=\"button\" class=\"btn btn-secondary col-6\" @click=\"login\">Back to Login</div>\n                                       <div type=\"button\" class=\"btn btn-primary col-4\" @click=\"register\">Register</div>\n                                   </div>\n                           </div>\n                        </form>\n                   </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\n\n  import router from '../router';\n  import {APIService} from '../http/APIService';\n  const apiService = new APIService();\n\n  export default {\n    name: 'Register',\n\n    data: () => ({\n      credentials: {},\n      password: \"\",\n      repassword: \"\",\n      valid: true,\n      showMsg: '',\n      loading: false,\n      rules: {\n        username: [\n          v => !!v || \"Username is required\",\n          v => (v && v.length > 3) || \"A username must be more than 3 characters long\",\n          v => /^[a-z0-9_]+$/.test(v) || \"A username can only contain letters and digits\"\n        ],\n        password: [\n          v => !!v || \"Password is required\",\n          v => (v && v.length > 7) || \"The password must be longer than 7 characters\"\n        ],\n        email: [\n          v => !!v || \"Email is required\"\n        ],\n        repassword: [\n          v => (v == this.password) || 'Passwords must match'\n        ]\n      },\n      showPassword: false,\n    }),\n    methods: {\n      register() {\n\n       apiService.registerUser(this.credentials).then(response => {\n          if (response.status === 201) {\n            this.movie = response.data;\n            this.showMsg = \"\";\n            router.push('/auth/');\n          }else{\n            this.showMsg = \"error\";\n          }\n        }).catch(error => {\n          if (error.response.status === 401) {\n            router.push(\"/auth\");\n          }else if (error.response.status === 400) {\n            this.showMsg = \"error\";\n          }\n        });\n      },\n    },\n    computed: {\n      passwordConfirmationRule() {\n        return (this.password === this.repassword) || 'Password must match'\n    }\n    }\n  }\n</script>\n\n"]},"metadata":{},"sourceType":"module"}